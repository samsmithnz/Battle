using Battle.Logic.Characters;
using Battle.Logic.Encounters;
using Battle.Logic.Game;
using Battle.Logic.Map;
using Battle.Logic.SaveGames;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Collections.Generic;
using System.IO;
using System.Numerics;
using System.Reflection;

namespace Battle.Tests.Scenarios
{
    [TestClass]
    [TestCategory("L1")]
    public class AICrashTest
    {
        private string _rootPath;

        [TestInitialize]
        public void GameSerializationStartUp()
        {
            _rootPath = Path.GetDirectoryName(Assembly.GetEntryAssembly().Location);
        }

        [TestMethod]
        public void AICrash_N_Test()
        {
            //Arrange
            string path = _rootPath + @"\SaveGames\Saves\Save010.json";

            //Act
            string fileContents;
            using (var streamReader = new StreamReader(path))
            {
                fileContents = streamReader.ReadToEnd();
            }
            Mission mission = GameSerialization.LoadGame(fileContents);
            mission.MoveToNextTurn();

            CharacterAI ai = new CharacterAI();
            AIAction aIAction = ai.CalculateAIAction(mission.Map,
                mission.Teams,
                mission.Teams[1].Characters[0],
                mission.RandomNumbers);
            string mapString = ai.CreateAIMap(mission.Map);
            string mapStringExpected = @"
. . . . . . . . . . . □ . . ■ . . □ . . . . . . . . □ . . . . . ■ . . . . . . . . . ■ . . . ■ . . . 
. . . . . . . . . . . . . . . . . . . . ■ . . . ■ . . . . . . . . . . . . . . . . . . ■ . . . . □ . 
. . . . . . . . . . . . . . . . ■ . . . . . . . . . . . . ■ . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . ■ . . . . . . . . ■ . . . . . . . . . □ ■ . . . . . . . . . . . . . . . . . . . 
. . . ■ . . ■ . . . □ . . . . . . . . . . □ . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . □ . . . . □ . . . . . . . . . . . . . . . . . . . . . . . . □ . . . . . . . . ■ . . . . . . 
. . . . . □ . . . . . . . . . . . . . . . . . . . □ . . . . . . . . . . . . . . . □ . . . . . . □ . 
. . . . ■ . . . . . . . . . □ . . . . . . . . . . . . . . . . . . . . . . . . . ■ . . . . . □ . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ■ . . . . ■ . . □ . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . □ . . . . □ . . □ . . . . . . . . . ■ . . . . . . . . . 
. . . . . . . . . . . □ . . . . □ . . . . . . . . . . . . . . . . . . . . □ . . . . . . ■ . . . . . 
. . . . . . . □ . . . . . . . . . . . . . . . . . . . . . . . ■ . . . . . . ■ . . . . . . . . . . . 
. . . . . ■ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ■ . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 1 ■ . . . ■ . . . . . . ■ . . . ■ . . . . . . . . . . . . . . 
. . . . . . ■ . . . . . . ■ . . . 1 1 1 1 1 . . . . . □ . . . . . . . . . . . . . . . . . . . . . . 
. □ . . . . . . . . . . . . . 1 1 1 1 1 3 1 1 1 . . . . . . ■ . . . . . . . . . . . ■ . . ■ . . . . 
. . . . . . . . . . . . 3 1 1 1 1 1 1 1 □ 3 1 1 4 ■ P □ . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . ■ . 1 6 3 3 1 1 1 1 1 1 □ 3 1 1 □ 4 1 1 1 . □ . . . . . . . . ■ . □ . . . . . . . . 
. . . . □ . □ . . 1 1 ■ 10 3 1 1 3 1 3 1 1 1 1 1 1 1 1 1 1 1 1 . . . . . . . . . . ■ . . . . . . . . 
. . . . . . . . 3 1 3 7 5 1 3 3 5 1 □ 3 1 1 1 1 3 3 1 1 1 1 3 . . . . . . . . . . . . . . . . . □ . 
. . . . . . . 3 1 1 10 7 5 1 3 7 5 3 5 1 3 1 1 1 □ □ 3 1 4 1 □ 3 . . . . . . . . . . . . . . . ■ . . 
□ . . . . . . 3 1 1 ■ 10 1 1 3 5 3 7 5 3 3 1 1 1 1 1 1 1 ■ 4 1 □ . ■ . . . ■ . . . ■ . . . . . . ■ . 
. . . . . . 5 3 1 1 7 5 1 3 7 3 5 7 12 0 5 5 3 1 1 1 1 1 1 1 1 4 1 . . . . . . . □ . . □ . . . . . . 
. . . . . . 5 3 1 1 7 1 1 6 5 5 0 9 ■ 12 7 7 5 5 1 1 3 1 1 1 1 ■ 4 . ■ . . . □ . □ . . . . . . . . . 
. . . . . . . 3 1 6 7 1 6 ■ 10 0 9 7 9 7 9 7 10 0 7 1 □ 3 1 1 4 4 1 . . . . . . . . . . . . . . . . . 
. . . . . 5 3 □ 4 ■ 6 1 □ 10 10 0 12 0 7 7 7 10 ■ 14 9 3 1 3 1 1 ■ ■ 4 1 . . . □ . . . . . . . . . . ■ . 
. . . . . 5 3 1 1 ■ 4 1 3 7 ■ 12 ■ 12 7 7 7 ■ 12 9 9 7 3 □ 3 1 1 1 ■ 4 . . . . . □ . . . □ . . . . . . 
□ . . . □ 7 1 1 1 1 1 3 7 7 7 9 9 7 7 7 5 9 9 9 9 5 5 1 1 1 1 1 1 1 1 . . . . . . . . . ■ . . . . . 
. . . . 1 3 1 1 1 1 1 3 7 7 7 9 7 7 7 5 11 9 9 9 7 5 3 3 3 1 1 1 1 1 1 . . . . . . . . . . . . . . . 
■ . . 3 3 3 1 1 1 1 1 7 7 7 9 11 7 7 5 P □ 11 7 7 5 3 7 3 3 1 1 1 3 1 1 . . . . . . . . . . . . . . . 
. ■ . . 5 1 1 1 1 1 3 3 7 9 9 □ 7 5 7 9 9 5 7 5 5 7 9 3 3 3 1 1 □ 3 . . . . . . . . . . . . . . . . 
■ . . . 5 1 1 1 1 1 3 3 5 9 5 7 5 7 9 7 5 5 5 7 11 7 7 3 1 1 1 1 1 3 1 . . . . . . □ . . □ . . . . . 
. . . . . 1 1 1 1 3 3 3 7 5 7 5 7 9 0 5 5 5 7 9 □ 7 6 5 7 3 3 1 1 □ . . . . . . . . . . . □ . . . . 
. . . . . 1 1 1 1 3 3 5 □ 9 7 7 12 0 7 5 5 7 7 7 5 7 ■ 6 3 3 1 1 1 ■ . . . ■ . . . . □ . . . . . . . 
. . . . . . 1 1 1 3 5 3 3 3 7 7 ■ 10 5 5 7 7 5 7 7 1 3 □ 5 3 3 1 4 . . . . . . . . . . . □ ■ . . . . 
. . . . . □ 3 1 3 5 3 1 5 3 3 9 7 5 5 7 7 7 7 5 3 3 3 3 3 6 5 6 ■ . . . . . . . . . . . . . □ ■ . . 
. . . ■ . . 1 1 3 □ 5 3 □ 3 3 □ 3 7 7 5 7 5 3 3 3 3 3 3 6 ■ 8 □ 6 . . . . . . . . . . . . . . . . . 
. . . . . . . 4 1 3 3 1 1 3 1 3 5 5 3 5 3 3 3 3 3 3 3 3 □ 8 8 3 . . . . □ . . . . . □ . . . . . . . 
. . . . . . . ■ 4 3 1 1 3 1 3 5 3 1 3 3 3 3 3 3 3 5 5 5 5 3 ■ 8 □ . . . . . . . ■ . □ . . . . . . . 
. . . . □ □ . . ■ 4 1 3 1 3 5 5 3 3 3 3 3 3 3 5 5 3 3 5 5 5 5 . . . . . . . . ■ . . . . . . □ . . . 
. . . . . . . . . 3 3 6 3 5 3 3 3 3 3 3 3 3 3 3 8 7 5 5 5 7 7 . . . . . . . . . . . . □ . . . . . . 
. . . □ . □ . . . □ 6 ■ 6 3 3 3 3 1 1 3 3 5 5 5 ■ □ 9 7 5 . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . □ . . . □ 3 1 1 3 3 5 5 5 5 5 5 5 . □ . . . . . . . . . . . . . . . . . . . . . . . 
. . . □ . □ . ■ . . . . . . . 5 5 5 5 5 5 5 5 5 . . . . . . . . . . . . . . . . . . . . . . . . □ . 
. . . . . . . . . . . . . . . . . 5 5 5 5 5 . . . . . . . . . . . ■ . □ . . . ■ . . . . . . . . . . 
. P . . . . . . . ■ ■ . . . ■ . . . . 3 . . . . . . ■ . . . . . □ . . . . . . . . ■ . . . . . ■ . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . ■ . . . . . . . . . . . . . . . . . . . . . . . 
. P . P . . . . . . . . . . . . □ . . . . . . . . . . . . . . . . . . . . . . . . . . . ■ . . . □ . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . □ . □ . . . . . . . . . . . . . . . . ■ . 
";

            //Assert
            Assert.AreEqual(ActionTypeEnum.MoveThenAttack, aIAction.ActionType);
            Assert.AreEqual(12, aIAction.Score);
            Assert.AreEqual(new Vector3(19, 0, 19), aIAction.StartLocation);
            Assert.AreEqual(new Vector3(16, 0, 23), aIAction.EndLocation);
            Assert.AreEqual(mapStringExpected, mapString);

            //Act
            PathFindingResult pathFindingResult = PathFinding.FindPath(mission.Map,
                aIAction.StartLocation,
                new Vector3(16, 0, 16)); //aIAction.EndLocation);
            CharacterMovement.MoveCharacter(mission.Map,
                mission.Teams[1].Characters[0],
                pathFindingResult,
                mission.Teams[1],
                mission.Teams[0],
                mission.RandomNumbers);
            Encounter.AttackCharacter(mission.Map,
                mission.Teams[1].Characters[0],
                mission.Teams[1].Characters[0].WeaponEquipped,
                mission.Teams[0].Characters[1],
                mission.RandomNumbers);

            CharacterAI ai2 = new CharacterAI();
            AIAction aIAction2 = ai2.CalculateAIAction(mission.Map,
                mission.Teams,
                mission.Teams[1].Characters[1],
                mission.RandomNumbers);
            string mapString2 = ai2.CreateAIMap(mission.Map);
            string mapStringExpected2 = @"
. . . . . . . . . . . □ . . ■ . . □ . . . . . . . . □ . . . . . ■ . . . . . . . . . ■ . . . ■ . . . 
. . . . . . . . . . . . . . . . . . . . ■ . . . ■ 4 1 1 1 . . . . . . . . . . . . . . ■ . . . . □ . 
. . . . . . . . . . . . . . . . ■ . . . . . 1 1 1 1 1 1 1 ■ . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . ■ . . . . . . . . ■ 4 3 1 1 1 1 1 1 1 □ ■ 4 1 1 . . . . . . . . . . . . . . . . 
. . . ■ . . ■ . . . □ . . . . . . 1 1 1 1 □ 3 1 1 1 1 1 1 1 1 1 1 1 3 1 . . . . . . . . . . . . . . 
. . . . □ . . . . □ . . . . . 1 1 1 1 1 1 1 1 1 1 3 1 1 1 1 1 1 1 1 □ 3 1 . . . . . . ■ . . . . . . 
. . . . . □ . . . . . . . . . 1 1 1 1 1 1 1 1 1 1 □ 3 1 1 1 1 1 1 1 1 1 1 1 . . . □ . . . . . . □ . 
. . . . ■ . . . . . . . . . □ 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4 1 1 1 1 4 1 1 3 . ■ . . . . . □ . . . 
. . . . . . . . . . . . . . 1 1 1 1 1 1 1 1 3 1 1 1 0 3 1 1 ■ 4 1 1 1 ■ 4 1 □ . . . . . . . . . . . 
. . . . . . . . . . . . . 1 1 1 3 1 1 1 1 1 □ 3 0 0 0 □ 0 1 □ 3 1 1 1 1 1 3 1 1 ■ . . . . . . . . . 
. . . . . . . . . . . □ . 1 1 1 □ 3 1 1 1 1 0 0 0 0 0 0 0 0 0 4 1 1 1 1 1 □ 4 1 . . . . ■ . . . . . 
. . . . . . . □ . . . . . 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 ■ 4 1 1 1 1 1 ■ 4 . . . . . . . . . . 
. . . . . ■ . . . . . . 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 4 1 1 1 1 ■ . . . . . . . . . 
. . . . . . . . . . . . 1 4 1 1 1 1 1 1 ■ 0 0 0 ■ 0 0 0 0 0 0 ■ 0 1 1 ■ 4 1 1 1 1 . . . . . . . . . 
. . . . . . ■ . . . . 1 1 ■ 4 1 1 1 1 0 0 0 0 0 0 0 0 □ 0 0 0 0 0 0 1 1 1 1 1 1 1 1 . . . . . . . . 
. □ . . . . . . . . . 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 ■ 0 0 1 1 1 1 1 1 1 1 . ■ . . ■ . . . . 
. . . . . . . . . . . . 3 1 1 1 1 1 1 1 □ 0 0 0 0 ■ P □ 0 0 0 0 0 0 1 1 1 1 1 4 1 3 . . . . . . . . 
. . . . . . . . ■ . . . 3 3 1 1 1 1 1 1 □ 0 0 0 □ 0 0 0 0 0 □ 0 0 1 1 1 1 1 1 ■ 4 □ . . . . . . . . 
. . . . □ . □ . . . . ■ 10 3 1 1 3 1 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 ■ . . . . . . . . 
. . . . . . . . . . . . 5 1 3 3 5 1 □ 3 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 . . . . . . . □ . 
. . . . . . . . . . . . 5 1 3 7 5 3 5 1 0 0 0 0 □ □ 0 0 0 0 □ 0 0 4 1 1 1 4 1 1 1 . . . . . . ■ . . 
□ . . . . . . . . . ■ . . 1 3 5 3 7 5 3 3 1 3 0 0 0 0 0 ■ 0 0 □ 4 ■ 4 1 1 ■ 4 1 . ■ . . . . . . ■ . 
. . . . . . . . . . . . . 3 7 3 5 7 8 7 3 3 3 0 1 0 0 0 0 0 0 4 1 1 4 1 1 1 3 1 □ . . □ . . . . . . 
. . . . . . . . . . . . . 6 5 3 7 5 ■ 8 3 3 1 3 0 0 0 0 0 1 1 ■ 4 1 ■ 4 1 1 □ 3 □ . . . . . . . . . 
. . . . . . . . . . . . . ■ 6 7 5 7 7 3 5 3 6 5 5 1 □ 3 1 1 4 4 1 1 1 1 1 3 1 . . . . . . . . . . . 
. . . . . . . □ . ■ . . □ . 8 7 8 7 3 3 3 6 ■ 10 5 3 1 3 1 1 ■ ■ 4 1 1 1 1 □ 3 . . . . . . . . . ■ . 
. . . . . . . . . ■ . . . . ■ 8 ■ 8 3 3 3 ■ 8 5 7 5 3 □ 3 1 1 1 ■ 4 1 1 1 1 . □ . . . □ . . . . . . 
□ . . . □ . . . . . . . . . . . 5 3 3 3 1 5 5 7 7 5 3 1 1 1 1 1 1 1 1 1 1 . . . . . . . ■ . . . . . 
. . . . . . . . . . . . . . . . . 3 3 1 7 5 7 7 5 1 1 3 3 1 1 1 1 1 1 1 . . . . . . . . . . . . . . 
■ . . . . . . . . . . . . . . . . . . 3 □ 9 7 5 1 1 5 3 3 1 1 1 . 1 . . . . . . . . . . . . . . . . 
. ■ . . . . . . . . . . . . . □ . . . . . . 3 1 3 5 5 3 3 3 1 . □ . . . . . . . . . . . . . . . . . 
■ . . . . . . . . . . . . . . . . . . . . . . . 7 5 5 . 1 . . . . . . . . . . . . □ . . □ . . . . . 
. . . . . . . . . . . . . . . . P . . . . . . . □ . . . . . . . . □ . . . . . . . . . . . □ . . . . 
. . . . . . . . . . . . □ . . . . . . . . . . . . . ■ . . . . . . ■ . . . ■ . . . . □ . . . . . . . 
. . . . . . . . . . . . . . . . ■ . . . . . . . . . . □ . . . . . . . . . . . . . . . . □ ■ . . . . 
. . . . . □ . . . . . . . . . . . . . . . . . . . . . . . . . . ■ . . . . . . . . . . . . . □ ■ . . 
. . . ■ . . . . . □ . . □ . . □ . . . . . . . . . . . . . ■ . □ . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . □ . . . . . . . □ . . . . . □ . . . . . . . 
. . . . . . . ■ . . . . . . . . . . . . . . . . . . . . . . ■ . □ . . . . . . . ■ . □ . . . . . . . 
. . . . □ □ . . ■ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ■ . . . . . . □ . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . □ . . . . . . 
. . . □ . □ . . . □ . ■ . . . . . . . . . . . . ■ □ . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . □ . . . □ . . . . . . . . . . . . . □ . . . . . . . . . . . . . . . . . . . . . . . 
. . . □ . □ . ■ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . □ . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ■ . □ . . . ■ . . . . . . . . . . 
. P . . . . . . . ■ ■ . . . ■ . . . . . . . . . . . ■ . . . . . □ . . . . . . . . ■ . . . . . ■ . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . ■ . . . . . . . . . . . . . . . . . . . . . . . 
. P . P . . . . . . . . . . . . □ . . . . . . . . . . . . . . . . . . . . . . . . . . . ■ . . . □ . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . □ . □ . . . . . . . . . . . . . . . . ■ . 
";

            //Assert
            Assert.AreEqual(ActionTypeEnum.DoubleMove, aIAction2.ActionType);
            Assert.AreEqual(9, aIAction2.Score);
            Assert.AreEqual(new Vector3(26, 0, 32), aIAction2.StartLocation);
            Assert.AreEqual(new Vector3(21, 0, 19), aIAction2.EndLocation);
            Assert.AreEqual(mapStringExpected2, mapString2);
        }
    }
}
